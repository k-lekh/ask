drafts = read('docs/*.md')

intro, documentation, template = `
  # Task
  From a provided payload you should generate a human readable description of a programming language 'Ask'.
  Payload contains source codes in 'js' files, manuals in 'md' files, and Ask-language files have '.ask' extension.
  It should be short overview for a small introduction.

  # Payload:
  ${engine_text}
``
  # Task
  From a provided payload you should generate an architectural design overview.
  Payload contains source codes in 'js' files, manuals in 'md' files, and Ask-language files have '.ask' extension.
  Present all technical details in a well structured and concise manner.
  Be consice. Reply summary.

  # Payload:
  ${engine_text}
``
  # Task
  Provide a simple and robust Markdown template for using for documentation about framework.
  Use best practices such as link to npm, github, author, etc.
`

intro, architecture = `
  # Task
  Rewrite the text provided in the payload.
  Fix grammatical and punctual errors.
  It should sould professional and soft.

  # Payload
  ${intro}
``
  # Task
  Rewrite the text provided in the payload.
  Fix grammatical and punctual errors.
  It should sould professional and soft.

  # Payload
  ${documentation}
`

valid, html = `
  # Task
  Validate the provided payload against the following rules:
  - Security
  - Privacy

  # Output
  If payload is valid, reply "valid".
  If payload is NOT valid, reply with error message.
  
  # Credits
  Mention that this page was completely built by AI following instructions in Ask language.
  Add link to my website: https://ask.k-lekh.com

  # Template
  ${template}

  # Payload
  ## Intro
  ${intro}

  ## Architecture
  ${architecture} 
``
  # Task
  Render the provided data to html.
  Use provided Template to render provided Content.
  Use in-page <style> and <script> tags.
  DO NOT use absolute size, positions

  # Payload
  ## Template
  ${template}
  ## Content
  ### Intro
  ${intro}
  ### Architecture
  ${architecture}
`

return valid.trim().toLowerCase() === "valid" ? html : valid