<html>
<head>
  <meta charset="UTF-8">
  <title>Example Page</title>
  <style>
    :root {
      --bg: #ffffff;
      --text: #333333;
      --primary: #007BFF;
      --accent: #FFC107;
    }
    body {
      background-color: var(--bg);
      color: var(--text);
      font-family: sans-serif;
      margin: 20px;
    }
    h1, h2, h3 {
      color: var(--primary);
    }
    a {
      color: var(--accent);
      text-decoration: none;
    }
    a:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <header></header>
  <nav></nav>
  <main>
    <h1>Hello</h1>
    <p>This is <code>Ask</code> Framework.</p>
    <p>This is a work in progress public research in a field of Natural Language Driven UI (NLDUI).</p>
    <p>Funny fact, that in NLDUI may be spelled like NL DUI, and in NL 'DUI' sounds like 'bye!'.</p>
    <p>So, <mark>old frameworks, doei</mark>!</p>

    <h1>Live research</h1>
    <p>This is a live research, which means, I commit everything I have, no filtering, no hidden work, all public.</p>
    <p>I may swear in the comments or even in the code.</p>
    <p>Well, swear language is a beautiful example of powerful a Natural Language, and we need to explore swear words usage for model run-time corrections.</p>
    <p>This live research may contain errors, wrong concepts, and other temporary results.</p>
    <p>I need them for onging work, they are temporary artifacts, and <code>git</code> is a beautiful tool for working with such artifacts: texts and text diffs.</p>

    <h1>Docs</h1>
    <p>To build docs, run in terminal</p>
    <pre><code>npm run routine playground/docs_index.html.ask.js && open playground/docs_index.html</code></pre>

    <h1>Natural language</h1>
    <p>Use of Natural Language is encouraged by default.</p>

    <h1>File based</h1>
    <p><code>read</code> and <code>write</code> are very common used fundamentals for working with temporary artifacts.</p>
    <p><em>routines</em> may produce huge results, media, binary etc, so they usually put a result to a file, and reply with a file name.</p>
    <p>I do not implement payloads as arguments, because it encourages to create cache with intermediate results.</p>

    <h1>Cache is your app</h1>
    <p>Having cache basically means having answers for all exact questions.</p>
    <p>Then, the needed artifact is built with quantum speed and delivered to client in a moment.</p>
    <p>My server controls headers for "old school web" to control cache on the browser side.</p>

    <h1>Routing data flows</h1>
    <p>Routing such operation in sequential or parallel chains, builing new routines on top of existing, unlocks unlimited nested levels and high performance with file based async cache.</p>

    <h1>Server</h1>
    <p><em>Ask server</em> accepts any path and text body for all methods.</p>
    <p>It may reply:</p>
    <ul>
      <li>empty string ''</li>
      <li>requested <code>source routine</code> cached result</li>
      <li>requested <code>source routine</code> in-place (lazy) computed result</li>
      <li>requested <code>source</code> text content, if <code>source</code> is not a path to routine</li>
    </ul>

    <h1>Infrastructure</h1>
    <p>Server may be deployed to aws lambda.</p>

    <h1>Scaling</h1>
    <p>Decomposing <mark>Intent</mark> into smaller tasks unless it may be executed using <mark>Ask</mark> framework.</p>

    <h1>Humans and machines</h1>
    <pre><code>This file is completely made by a human, K. Lekh.
</code></pre>
    <p>So, this makes <code>Readme.md</code> so special.</p>
    <p>Humans always bring meaning to regular things.</p>
    <p>All other files may be <mark>read and modified by AI</mark>.</p>
    <p>AI may produce any other file, such as documentation in md, data in json or code in js.</p>
    <p>Server may run routines, which are js files, in a safe sandbox.</p>

    <h1>Examples</h1>
    <p>Application is limitless.</p>
    <p>I want it to work in a loop and find my unfinished ideas, and finish them for me.</p>
    <p>May be even deploy and test them for me. And analyse results. And do iterations.</p>
    <p>Does it give freedom?</p>

    <h1>Keep in touch</h1>
    <p>I'm curious about other ai-driven frameworks, so don't shy to send a message:</p>
    <p><code>hello@k-lekh.com</code></p>
  </main>
  <footer>
  </footer>
</body>
</html>